@page "/Tickets/Edit/{TecnicoId:int}"
@inject TicketsService ticketsService
@inject NavigationManager navigation
@rendermode InteractiveServer
@inject Blazored.Toast.Services.IToastService ToastService

<PageTitle>Editar Ticket</PageTitle>
<div>
    @if (!string.IsNullOrEmpty(MensajeError))
    {
        <div class="alert alert-danger">@MensajeError</div>
    }
</div>
<EditForm Model="ticket" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h1><strong>Editar Ticket</strong></h1>
            </div>
            <div class="card-body">

                @*Id*@
                <label for="id" class="form-label"><strong>ID</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="ticket.TicketId" readonly></InputNumber>

                @*Fecha*@
                <label for="NombreTecnico" class="form-label"><strong>Nombre</strong></label>
                <InputDate id="Fecha" class="form-control" @bind-Value="ticket.Fecha"></InputDate>
                <ValidationMessage For="@(()=> ticket.Fecha)"></ValidationMessage>

                @*Descripcion*@
                <label for="Descripcion" class="form-label"><strong>Sueldo por hora</strong></label>
                <InputNumber id="SueldoHora" class="form-control" @bind-Value="ticket.Descripcion"></InputNumber>
                <ValidationMessage For="@(()=> ticket.Descripcion)"></ValidationMessage>

            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-info text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
                <button type="submit" class="btn btn-success bi bi-pencil-square"> Modificar</button>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int TicketId { get; set; }
    public string MensajeError { get; set; } = string.Empty;
    public Tickets ticket { get; set; } = new Tickets();

    protected override async Task OnInitializedAsync()
    {
        if (ticket != null)
        {
            ticket = await ticketsService.Buscar(TicketId);

        }
    } 

    public async Task Modificar()
    {
        
            var resultado = await ticketsService.Guardar(ticket);
            ticket = new Tickets();
        
    }

    public void Volver()
    {
        navigation.NavigateTo("Tecnicos/Index");
    }
}


